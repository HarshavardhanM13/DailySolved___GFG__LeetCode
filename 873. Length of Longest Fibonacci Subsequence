873. Length of Longest Fibonacci Subsequence





class Solution:
    def lenLongestFibSubseq(self, arr: List[int]) -> int:
        
        num_to_ind = {num : index for index, num in enumerate(arr)}
        max_len = 0
        n = len(arr)
        dp = {}

        for i in range(n):
            for j in range(i+1,n):
                pair_sum_num = arr[i] + arr[j]
                if pair_sum_num in num_to_ind:
                    next_ind = num_to_ind[pair_sum_num]
                    dp[(j,next_ind)] = dp.get((i,j), 2) + 1
                    max_len = max(max_len,dp[(j,next_ind)])

        return max_len if max_len >= 3 else 0
