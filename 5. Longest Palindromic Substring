5. Longest Palindromic Substring


class Solution:
    def longestPalindrome(self, s: str) -> str:
        
        if len(s) <= 1:
            return s

        dp = [[False] * len(s) for i in range(len(s))]
        max_len = 0
        max_str = s[0]

        for i in range(len(s)):
            dp[i][i] = True
            for j in range(i):
                print(i,j)
                if s[i] == s[j] and (i - j <= 2 or dp[j + 1][i - 1]):
                    dp[j][i] = True
                    if i - j + 1 > max_len:
                        max_len = i - j + 1
                        max_str = s[j : i + 1]
        
        return max_str
