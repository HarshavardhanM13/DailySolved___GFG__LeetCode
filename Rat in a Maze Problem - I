
Rat in a Maze Problem - I



from typing import List

class Solution:
    def findPath(self, m: List[List[int]]) -> List[str]:
        
        
        n = len(m)
        res = []
        def path(row,col,ans,visited):
            
            if row == n - 1 and col == n - 1:
                res.append(ans)
                return ;
            
            #DOWN
            if row + 1 < n and (row,col) not in visited and m[row + 1][col] == 1:
                visited[(row,col)] = 1
                path(row + 1,col,ans + 'D',visited)
                del visited[(row,col)] 
            
            #LEFT
            if col - 1 >= 0 and (row,col) not in visited and m[row][col - 1] == 1:
                visited[(row,col)] = 1
                path(row,col - 1,ans + 'L',visited)
                del visited[(row,col)]

            #RIGHT
            if col + 1 < n and (row,col) not in visited and m[row][col + 1] == 1:
                visited[(row,col)] = 1
                path(row,col + 1,ans + 'R',visited)
                del visited[(row,col)]
            
            #UP 
            if row - 1 >= 0 and (row,col) not in visited and m[row-1][col] == 1:
                visited[(row,col)] = 1
                path(row - 1,col,ans + 'U',visited)
                del visited[(row,col)]
                
                
        if m[0][0] == 1:
            path(0,0,"",{})
        return res
