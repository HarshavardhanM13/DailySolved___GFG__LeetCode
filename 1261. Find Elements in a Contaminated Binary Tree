
1261. Find Elements in a Contaminated Binary Tree


# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class FindElements:

    def __init__(self, root: Optional[TreeNode]):
        self.elements = set()
        self.inorder(root,0)
        print(root)

    def find(self, target: int) -> bool:
        if target in self.elements:
            return True
        return False
    
    def inorder(self,root,curr):
        if not root:
            return 
        root.val = curr
        self.elements.add(curr)
        l = 2 * curr + 1
        if root.left:
            root.left.val = l
        self.inorder(root.left,l)
        r = 2 * curr + 2
        if root.right:
            root.right.val = r
        self.inorder(root.right,r)

        

# Your FindElements object will be instantiated and called as such:
# obj = FindElements(root)
# param_1 = obj.find(target)
