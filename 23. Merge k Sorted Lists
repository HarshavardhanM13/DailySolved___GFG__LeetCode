23. Merge k Sorted Lists



# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
import heapq
class Solution:
    def mergeKLists(self, lists: List[Optional[ListNode]]) -> Optional[ListNode]:
        
        heap = []
        for sub_list in lists:
            curr = sub_list
            while curr:
                heapq.heappush(heap,curr.val)
                curr = curr.next
            
        #heapq.heapify(heap)
        result = ListNode(-1)
        temp = result

        while heap:
            elem = heapq.heappop(heap)
            newNode = ListNode(elem)
            temp.next = newNode
            temp = newNode
        
        return result.next
