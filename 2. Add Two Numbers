2. Add Two Numbers




# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next

class Solution:
    def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:

        dummy = ListNode()
        curr = dummy
        carry = 0
        prev = curr
        while l1 and l2:
            add = l1.val + l2.val + carry
            if add > 9:
                curr.val = add%10
                carry = 1
            else:
                curr.val = add
                carry = 0
            l1 = l1.next
            l2 = l2.next
            newNode = ListNode()
            curr.next = newNode
            prev = curr
            curr = newNode
        
        while l1:
            add = l1.val + carry
            if add > 9:
                curr.val = add%10
                carry = 1
            else:
                curr.val = add
                carry = 0
            l1 = l1.next
            newNode = ListNode()
            curr.next = newNode
            prev = curr
            curr = newNode
        
        while l2:
            add = l2.val + carry
            if add > 9:
                curr.val = add%10
                carry = 1
            else:
                curr.val = add
                carry = 0
            l2 = l2.next
            newNode = ListNode()
            curr.next = newNode
            prev = curr
            curr = newNode
        if carry == 1:
            curr.val = 1
        else:
            prev.next = None
        return dummy
