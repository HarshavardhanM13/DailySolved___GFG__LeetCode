
199. Binary Tree Right Side View




/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        
        Queue<TreeNode> queue = new LinkedList<>();
        List<Integer> view = new ArrayList<>();
        
        if(root == null){
            return view;
        }
        queue.add(root);

        while(!queue.isEmpty()){
            int size = queue.size();
            TreeNode last_node = null;
            for(int i=0;i<size;i++){
                last_node = queue.poll();
                if(last_node.left != null){
                    queue.add(last_node.left);
                }
                if(last_node.right != null){
                    queue.add(last_node.right);
                }
            }
            view.add(last_node.val);
        }
        return view;
    }
}
