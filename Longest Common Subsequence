Longest Common Subsequence





class Solution {
    // Function to find the length of the longest common subsequence in two strings.
    static int getLCSLength(String s1, String s2) {
            int[][] dp = new int[s1.length()][s2.length()];
            for(int i=0;i<dp.length;i++){
                Arrays.fill(dp[i],-1);
            }
            int res = rec(s1.length()-1,s2.length() - 1,s1,s2,dp);
            return res;
    }
    
    public static int  rec(int ind1,int ind2,String s1,String s2,int[][] dp){
        
        if(ind1 < 0 || ind2 < 0){
            return 0;
        }
        
        if(dp[ind1][ind2] != -1){
            return dp[ind1][ind2];
        }
        
        if(s1.charAt(ind1) == s2.charAt(ind2)){
            dp[ind1][ind2] = 1 + rec(ind1-1,ind2-1,s1,s2,dp);
            return dp[ind1][ind2];
        }
        else{
            dp[ind1][ind2] = Math.max(rec(ind1-1,ind2,s1,s2,dp),rec(ind1,ind2-1,s1,s2,dp));
            return dp[ind1][ind2];
        }
    }
}
