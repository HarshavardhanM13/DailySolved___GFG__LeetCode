216. Combination Sum III



class Solution {
    int[] digits = {1,2,3,4,5,6,7,8,9};
    List<List<Integer>> results = new ArrayList<>();
    public List<List<Integer>> combinationSum3(int k, int n) {
        backtrack(0,new ArrayList<Integer>(),k,n);
        return results;
    }

    public void backtrack(int ind, List<Integer> curr, int k, int n){
        
        if(curr.size() == k && n == 0){
            results.add(new ArrayList<>(curr));
            return;
        }
        if(n < 0 || curr.size() > k || ind > 8){
            return ;
        }
        curr.add(digits[ind]);
        backtrack(ind + 1,curr, k, n - digits[ind]);
        curr.remove(curr.size() -1);
        backtrack(ind + 1, curr, k, n);
    }
}
