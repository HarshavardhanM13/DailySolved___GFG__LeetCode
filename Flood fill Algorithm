
Flood fill Algorithm




class Solution {
    public int[][] floodFill(int[][] image, int sr, int sc, int newColor) {
        
        int n = image.length;
        int m = image[0].length;
        
        int[][] visited = new int[n][m];
        for(int[] row : visited){
            Arrays.fill(row,-1);
        }
        
        dfs(sr,sc,image,visited,newColor,image[sr][sc]);
        return image;
    }
    
    public void dfs(int i,int j,int[][] image,int[][] visited, int color, int prev){
        if(i<0|| j<0 || i>=visited.length || j>=visited[0].length ||image[i][j] != prev || visited[i][j] != -1){
            return;
        }
        visited[i][j] = 1;
        image[i][j] = color;
        dfs(i+1,j,image,visited,color,prev);
        dfs(i-1,j,image,visited,color,prev);
        dfs(i,j+1,image,visited,color,prev);
        dfs(i,j-1,image,visited,color,prev);
        return;
    }
}
