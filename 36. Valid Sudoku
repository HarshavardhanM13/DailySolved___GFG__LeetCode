36. Valid Sudoku





class Solution:
    def isValidSudoku(self, board: List[List[str]]) -> bool:
        
        row_map = {}
        col_map = {}
        sub_board_map = {}

        for row in range(len(board)):
            for col in range(len(board[row])):
                key = board[row][col]
                sub_board_val = (row//3 , col//3)
                if row not in row_map:
                    row_map[row] = set()
                if col not in col_map:
                    col_map[col] = set()
                if sub_board_val not in sub_board_map:
                    sub_board_map[sub_board_val] = set()

                if key in row_map[row] or key in col_map[col] or key in sub_board_map[sub_board_val]:
                    return False
                if key == '.':
                    continue
    
                row_map[row].add(board[row][col])
                col_map[col].add(board[row][col])
                sub_board_map[sub_board_val].add(board[row][col])
        
        return True
