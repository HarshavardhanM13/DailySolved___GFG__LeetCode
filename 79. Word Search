79. Word Search



class Solution {
    public boolean exist(char[][] board, String word) {
        int n = board.length;
        int m = board[0].length;

        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(board[i][j] == word.charAt(0)){
                    if(backtrack(i,j,0,word,board)){
                        return true;
                    }
                }
            }
        }
        return false;
    }
    boolean backtrack(int i,int j,int ind,String s,char[][] board){
        if(i<0 || j<0 || i>=board.length || j>= board[i].length || ind >= s.length() || board[i][j] != s.charAt(ind)){
            return false;
        }
        if(ind == s.length() - 1){
            return true;
        }
        char temp = board[i][j];
        board[i][j] = '!';
        boolean right = backtrack(i,j+1,ind + 1,s,board);
        boolean left = backtrack(i,j-1,ind + 1,s,board);
        boolean down = backtrack(i+1,j,ind + 1,s,board);
        boolean top = backtrack(i-1,j,ind + 1,s,board);
        board[i][j] = temp;
        return (right || left || top || down);
    }
}
