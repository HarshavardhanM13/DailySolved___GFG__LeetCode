Cycle in a Directed Graph




from typing import List

class Solution:
    
    #Function to detect cycle in a directed graph.
    def isCyclic(self, V : int , adj : List[List[int]]) -> bool :
        # code here
        
        visited = [0] * V
        stack = [0] * V
        def dfs(curr,parent,visited):
            visited[curr] = 1
            stack[curr] = 1
            for adjnode in adj[curr]:
                if visited[adjnode] == 0:
                    if(dfs(adjnode,curr,visited) == True):
                        return True
                elif stack[adjnode] == 1:
                    return True
            stack[curr] = 0
            return False
        
        for i in range(V):
            if visited[i] == 0:
                if dfs(i,-1,visited) == True:
                    return True
        return False
        
