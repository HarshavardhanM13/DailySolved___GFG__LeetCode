
399. Evaluate Division


class Solution:
    def calcEquation(self, equations: List[List[str]], values: List[float], queries: List[List[str]]) -> List[float]:
        
        adj = defaultdict(list)

        for ind, eq in enumerate(equations):
            a , b = eq
            adj[a].append([b,values[ind]])
            adj[b].append([a,1 / values[ind]])


        def bfs(src , target):
            if src not in adj or target not in adj:
                return -1;
            q = deque()
            visited = set()
            q.append([src,1])
            while q:
                n , w = q.popleft()
                if n == target:
                    return w
                for neighbor, weight in adj[n]:
                    if neighbor not in visited:
                        q.append([neighbor, w * weight])
                        visited.add(neighbor)
            
            return -1;
        
        return [bfs(q[0],q[1]) for q in queries]
