Maximum of minimum for every window size




class Solution:
    def maxOfMins(self, arr):
       
        n = len(arr)
        result  = [0] * (n + 1)
        left = [0] * n 
        right = [0] * n
        stack = []
        
        for i in range(n):
            while stack  and arr[stack[-1]] > arr[i]:
                stack.pop()
            left[i] =  stack[-1] if stack else -1
            stack.append(i)
        
        stack.clear()
        for i in range(n - 1, -1, -1):
            while stack and arr[stack[-1]] >= arr[i]:
                stack.pop()
            right[i] = stack[-1] if stack else n
            stack.append(i)
        
        for i in range(n):
            l = right[i] - left[i] - 1
            result[l] = max(arr[i],result[l])
        
        for i in range(n - 1, -1, -1):
            result[i] = max(result[i],result[i+1])
        
        return result[1:]
