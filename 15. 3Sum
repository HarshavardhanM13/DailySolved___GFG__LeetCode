15. 3Sum




class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
       
       
       
        int start = 0;
        Set<List<Integer>> unique  = new HashSet<>();
        Arrays.sort(nums);

        
        while(start < nums.length){
            int left  = start + 1;
            int right = nums.length - 1;
            while(left < right){
                int sum = nums[start] + nums[left] +  nums[right];
                ArrayList<Integer> triplets = new ArrayList<>();
                triplets.add(nums[start]);
                triplets.add(nums[left]);
                triplets.add(nums[right]);
                if(sum == 0 && !unique.contains(triplets)){
                    unique.add(triplets);
                    left++;
                    right--;
                }
                else if(sum > 0){
                    right--;
                }
                else{
                    left++;
                }
            }
            start++;
        }

        List<List<Integer>> result = new ArrayList<>();
        for(List<Integer> al : unique){
            result.add(al);
        }

        return result;
    }
}
